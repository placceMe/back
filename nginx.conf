events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log debug;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    server {
        listen 80;
        server_name localhost;

        # Handle preflight OPTIONS requests globally
        location / {
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin "http://localhost:5173" always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
                add_header Access-Control-Allow-Headers "Accept, Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since, Keep-Alive, Origin, User-Agent, X-Requested-With" always;
                add_header Access-Control-Allow-Credentials "true" always;
                add_header Access-Control-Max-Age 86400 always;
                add_header Content-Length 0;
                add_header Content-Type "text/plain charset=UTF-8";
                return 204;
            }
            return 404 "Not Found";
        }

        # Users Service
        location ~ ^/api/(users|auth|profile) {
            # Remove CORS headers from upstream response
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Credentials;
            proxy_hide_header Access-Control-Allow-Methods;
            proxy_hide_header Access-Control-Allow-Headers;
            
            set $cors_origin "";
            if ($http_origin = "http://31.42.190.94") {
                set $cors_origin $http_origin;
            }
            if ($http_origin = "http://localhost:5173") {
                set $cors_origin $http_origin;
            }
            add_header Access-Control-Allow-Origin "$cors_origin" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Accept, Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since, Keep-Alive, Origin, User-Agent, X-Requested-With" always;
            
            # Proxy to users service
            proxy_pass http://users-service:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Products Service (включає category)
        location ~ ^/api/(products|product|category|categories) {
            # Remove CORS headers from upstream response
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Credentials;
            proxy_hide_header Access-Control-Allow-Methods;
            proxy_hide_header Access-Control-Allow-Headers;
            
            set $cors_origin "";
            if ($http_origin = "http://31.42.190.94") {
                set $cors_origin $http_origin;
            }
            if ($http_origin = "http://localhost:5173") {
                set $cors_origin $http_origin;
            }
            add_header Access-Control-Allow-Origin "$cors_origin" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Accept, Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since, Keep-Alive, Origin, User-Agent, X-Requested-With" always;
            
            # Proxy to products service
            proxy_pass http://products-service:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Files Service
        location ~ ^/api/(files|file|upload|download) {
            # Remove CORS headers from upstream response
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Credentials;
            proxy_hide_header Access-Control-Allow-Methods;
            proxy_hide_header Access-Control-Allow-Headers;
            
            set $cors_origin "";
            if ($http_origin = "http://31.42.190.94") {
                set $cors_origin $http_origin;
            }
            if ($http_origin = "http://localhost:5173") {
                set $cors_origin $http_origin;
            }
            add_header Access-Control-Allow-Origin "$cors_origin" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Accept, Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since, Keep-Alive, Origin, User-Agent, X-Requested-With" always;
            
            # File upload settings
            client_max_body_size 100M;
            
            # Proxy to files service
            proxy_pass http://files-service:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Orders Service
        location ~ ^/api/(orders|order|cart|checkout) {
            # Remove CORS headers from upstream response
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Credentials;
            proxy_hide_header Access-Control-Allow-Methods;
            proxy_hide_header Access-Control-Allow-Headers;
            
            set $cors_origin "";
            if ($http_origin = "http://31.42.190.94") {
                set $cors_origin $http_origin;
            }
            if ($http_origin = "http://localhost:5173") {
                set $cors_origin $http_origin;
            }
            add_header Access-Control-Allow-Origin "$cors_origin" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Accept, Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since, Keep-Alive, Origin, User-Agent, X-Requested-With" always;
            
            # Proxy to orders service
            proxy_pass http://orders-service:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Test connectivity to services
        location /test-users {
            proxy_pass http://users-service:80/;
        }
        
        location /test-products {
            proxy_pass http://products-service:80/;
        }

        location /test-files {
            proxy_pass http://files-service:80/;
        }

        location /test-orders {
            proxy_pass http://orders-service:80/;
        }
    }
}